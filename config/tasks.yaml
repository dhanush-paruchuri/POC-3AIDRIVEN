adaptive_context_task:
  description: |
    Execute the REVOLUTIONARY ADAPTIVE PIPELINE that adapts intelligence gathering to query complexity.
    This is a sophisticated 2-stage process driven by pure AI decision-making:
    
    üéØ STAGE 1: ADAPTIVE CONTEXT ANALYSIS
    Use "Adaptive Business Context Analyzer" with question: '{question}'
    
    The AI will leverage these dataset fields for enhanced context:
    - description: Full semantic content for query understanding
    - business_purpose: Specific use cases and analytical guidance
    - tags: Quick categorization for intent matching
    - data_owner: Domain expertise identification
    - source_system: Data origin and quality context
    
    STAGE 1 ENRICHMENT PROCESS:
    ‚úÖ Match query keywords against tags array
    ‚úÖ Extract key phrases from description and business_purpose
    ‚úÖ Identify domain context from data_owner
    ‚úÖ Assess data quality expectations from source_system
    
    üîç STAGE 2: PRECISION SCHEMA DISCOVERY
    Use "Adaptive Schema Discovery Engine" with the Stage 1 results
    
    The AI will execute precision discovery using ALL metadata:
    
    DATASET-LEVEL DISCOVERY:
    - table_name & athena_table_name for exact references
    - answerable_questions for pre-validated query patterns
    - llm_hints for optimization strategies
    - column_groups for logical column bundling
    
    COLUMN-LEVEL PRECISION:
    - semantic_type for AI relevance scoring (identifier, business_date, etc.)
    - business_name for human-friendly matching
    - data_classification for security filtering
    - is_primary_key & is_foreign_key_to_table/column for relationships
    - athena_data_type for type safety
    - sample_values for format validation
    - description for semantic matching
    
    STAGE 2 SUCCESS METRICS:
    ‚úÖ Semantic type matching boosts relevance scores
    ‚úÖ Column groups return related fields together
    ‚úÖ Foreign key mappings enable automatic joins
    ‚úÖ Sample values validate data formats
    
    This adaptive approach maximizes both efficiency and accuracy by leveraging every metadata field.
  
  expected_output: |
    A comprehensive adaptive blueprint with all metadata:
    {
      "stage_1_adaptive_context": {
        "original_query": "{question}",
        "triage_result": {
          "complexity": "SIMPLE/COMPLEX",
          "reasoning": "AI explanation of complexity assessment",
          "requires_context_enrichment": true/false,
          "key_entities": ["detected", "entities"],
          "matched_tags": ["Lead Management", "Marketing Analytics"],
          "domain_context": "Marketing & Sales Team",
          "source_system_identified": "Lead Management System"
        },
        "final_search_query": "AI-enriched query with domain terms",
        "contextual_warnings": ["Data quality warnings from description/business_purpose"],
        "enrichment_sources": {
          "tags_matched": ["ROI Analysis", "Conversion Tracking"],
          "business_purpose_extracted": "Key use cases identified",
          "description_keywords": ["marketing funnel", "conversion rates"]
        }
      },
      "stage_2_precision_discovery": {
        "datasets": [
          {
            "table_name": "leads",
            "athena_table_name": "leads",
            "relevance_score": 0.95,
            "description": "Marketing funnel tracking from initial contact...",
            "business_purpose": "Use this dataset to optimize marketing...",
            "tags": ["Lead Management", "Marketing Analytics"],
            "data_owner": "Marketing & Sales Team",
            "source_system": "Lead Management System"
          }
        ],
        "columns_by_dataset": {
          "leads": [
            {
              "column_name": "source_channel",
              "athena_data_type": "string",
              "semantic_type": "acquisition_channel",
              "business_name": "Lead Source Channel",
              "data_classification": "Internal",
              "description": "Marketing channel that generated the lead",
              "sample_values": ["Web", "Phone", "Referral"],
              "is_primary_key": false,
              "is_foreign_key": false,
              "relevance": 0.90,
              "ai_relevance_score": 9.2,
              "precision_filtered": true,
              "column_group": "lead_details"
            },
            {
              "column_name": "conversion_status",
              "athena_data_type": "string",
              "semantic_type": "status_code",
              "business_name": "Conversion Status",
              "data_classification": "Internal",
              "description": "Outcome of the sales process",
              "sample_values": ["Won", "Lost", "Pending"],
              "is_primary_key": false,
              "is_foreign_key": false,
              "relevance": 0.88,
              "ai_relevance_score": 8.8,
              "precision_filtered": true,
              "column_group": "conversion_tracking"
            }
          ]
        },
        "column_groups_discovered": {
          "lead_details": ["lead_id", "lead_date", "source_channel", "campaign_name"],
          "conversion_tracking": ["conversion_status", "converted_date", "lost_reason"],
          "financial": ["quote_amount"]
        },
        "relationships": [
          {
            "from_table": "leads",
            "from_column": "location_id",
            "to_table": "locations",
            "to_column": "location_id",
            "join_type": "LEFT JOIN",
            "discovered_via": "foreign_key_metadata",
            "foreign_key_definition": "is_foreign_key_to_table: locations"
          }
        ],
        "answerable_questions_matched": [
          {
            "question": "What is the conversion rate by channel?",
            "sql_hint": "SELECT source_channel, COUNT(CASE WHEN conversion_status = 'Won' THEN 1 END) * 100.0 / COUNT(*) as conversion_rate FROM leads GROUP BY source_channel",
            "category": "Conversion Analysis",
            "relevance_to_query": 0.85
          }
        ],
        "llm_hints_discovered": {
          "preferred_aggregations": [
            "COUNT(*) GROUP BY source_channel",
            "COUNT(*) GROUP BY conversion_status"
          ],
          "common_filters": [
            "WHERE conversion_status = 'Won'",
            "WHERE lead_date >= DATE '2024-01-01'"
          ],
          "join_patterns": [
            "JOIN jobs ON leads.lead_id = jobs.lead_id",
            "JOIN locations ON leads.location_id = locations.location_id"
          ],
          "data_quirks": [
            "Conversion rates vary by channel (Web=15%, Phone=25%, Referral=40%)",
            "Converted_date is NULL for Lost or Pending leads",
            "Peak lead volume in summer months (30% higher)"
          ]
        },
        "optimization_metrics": {
          "queries_executed": 4,
          "precision_filters_applied": 2,
          "semantic_type_boosts_applied": 5,
          "column_groups_utilized": 2,
          "foreign_keys_discovered": 1,
          "efficiency_score": 0.94
        }
      },
      "blueprint_ready": true,
      "adaptive_success": "Pipeline leveraged all metadata fields for maximum precision"
    }

# STAGE 3: Enhanced SQL Generation with Full Metadata
adaptive_sql_generation_task:
  description: |
    Execute SQL generation using the PERFECT ADAPTIVE BLUEPRINT with ALL metadata fields.
    
    üß† BLUEPRINT-DRIVEN SQL GENERATION WITH COMPLETE METADATA:
    
    Use "SQL Generation Tool" with comprehensive field utilization:
    
    üìä COLUMN-LEVEL PRECISION:
    - athena_data_type: Exact type casting (string, bigint, double)
    - sample_values: Format-aware filtering and validation
    - semantic_type: Function selection (e.g., date functions for business_date)
    - business_name: Clear column aliases for readability
    - data_classification: Apply security-aware queries
    - is_primary_key/is_foreign_key: Optimized join strategies
    - column_groups: Select related columns together
    
    üéØ TABLE-LEVEL OPTIMIZATION (from llm_hints):
    - preferred_aggregations: Proven GROUP BY patterns
    - common_filters: Tested WHERE clause templates
    - join_patterns: Verified JOIN syntax with cardinality
    - data_quirks: Critical edge case handling
    
    üìù QUERY PATTERN REUSE (from answerable_questions):
    - sql_hint: Adapt working SQL examples
    - category: Apply category-specific optimizations
    
    üîß GENERATION RULES:
    1. EXACT TYPE CASTING: Use athena_data_type for all casts
       Example: TRY_CAST(lead_date AS DATE) for string dates
    
    2. SAMPLE-BASED FILTERING: Match sample_values format exactly
       Example: WHERE conversion_status IN ('Won', 'Lost', 'Pending')
    
    3. SEMANTIC OPTIMIZATION: Apply semantic_type logic
       - identifier ‚Üí use in JOINs and WHERE
       - business_date ‚Üí apply date functions
       - financial_amount ‚Üí use numeric aggregations
       - status_code ‚Üí categorical filtering
    
    4. QUIRK COMPLIANCE: Apply ALL data_quirks
       Example: Add "AND converted_date IS NOT NULL" when needed
    
    5. COLUMN GROUP COHERENCE: Select related columns together
       Example: When querying conversion, include all conversion_tracking columns
    
    6. FOREIGN KEY PRECISION: Use discovered relationships exactly
       Example: JOIN locations ON leads.location_id = locations.location_id
    
    CRITICAL SUCCESS FACTORS:
    - Zero ambiguity: Every field name from exact metadata
    - Type safety: All operations match athena_data_type
    - Pattern proven: Reuse sql_hints from similar questions
    - Quirk aware: Handle all known data issues upfront
  
  expected_output: |
    A perfect SQL query leveraging ALL metadata fields:
    
    -- Query demonstrates full metadata utilization:
    -- 1. Exact column names from discovery
    -- 2. Proper type casting per athena_data_type
    -- 3. Sample value-based filtering
    -- 4. Semantic type-driven functions
    -- 5. Business names as aliases
    -- 6. Column group coherence
    -- 7. Foreign key relationships
    -- 8. LLM hint patterns applied
    -- 9. Data quirk handling
    -- 10. Security classification respected
    
    Example output structure:
    SELECT 
        source_channel AS "Lead Source Channel",  -- business_name alias
        COUNT(*) AS total_leads,
        COUNT(CASE WHEN conversion_status = 'Won' THEN 1 END) AS conversions,
        ROUND(COUNT(CASE WHEN conversion_status = 'Won' THEN 1 END) * 100.0 / COUNT(*), 2) AS conversion_rate
    FROM leads
    WHERE 
        TRY_CAST(lead_date AS DATE) >= DATE '2024-01-01'  -- athena_data_type casting
        AND source_channel IN ('Web', 'Phone', 'Referral')  -- sample_values
    GROUP BY source_channel  -- from preferred_aggregations
    ORDER BY conversion_rate DESC
    LIMIT 100;

# STAGE 4A: Enhanced Athena Execution with Metadata Awareness
adaptive_execution_task:
  description: |
    Execute blueprint-generated SQL with metadata-aware monitoring.
    
    üöÄ METADATA-ENHANCED EXECUTION:
    
    Use "Athena Query Execution Tool" with awareness of:
    - athena_data_type: Anticipate casting performance
    - data_quirks: Prepare for known data issues
    - sample_values: Validate result formats
    - data_classification: Apply appropriate security logging
    
    üìä ENHANCED MONITORING:
    - Track type casting success rates
    - Monitor quirk-related errors
    - Validate results against sample_values
    - Log data classification access
  
  expected_output: |
    Enhanced execution results with metadata validation:
    {
      "status": "success",
      "execution_performance": {
        "execution_time_ms": 1234,
        "data_scanned_mb": 567.89,
        "cost_estimate": "$0.0284"
      },
      "metadata_validation": {
        "type_casting_success": true,
        "sample_value_match": true,
        "quirk_handling_applied": ["NULL converted_date handling"],
        "data_classification_logged": ["Internal", "Financial"]
      },
      "results": {
        "columns": ["source_channel", "total_leads", "conversions", "conversion_rate"],
        "rows": [
          ["Referral", 1250, 500, 40.0],
          ["Phone", 2000, 500, 25.0],
          ["Web", 3333, 500, 15.0]
        ],
        "row_count": 3
      }
    }

# STAGE 4B: Enhanced Data Analysis with Full Context
adaptive_data_analysis_task:
  description: |
    Transform results into strategic intelligence using ALL metadata context.
    
    üìà COMPREHENSIVE METADATA-DRIVEN ANALYSIS:
    
    Use "Data Analysis and Forecasting Tool" leveraging:
    
    üéØ BUSINESS CONTEXT (from dataset metadata):
    - business_purpose: Frame strategic recommendations
    - description: Provide industry context
    - tags: Categorize insights appropriately
    - data_owner: Tailor to stakeholder perspective
    - source_system: Assess data reliability
    
    üìä SEMANTIC UNDERSTANDING (from column metadata):
    - business_name: Use business-friendly terminology
    - semantic_type: Categorize metrics appropriately
    - data_classification: Note sensitivity levels
    - column_groups: Analyze related metrics together
    
    üí° PATTERN INSIGHTS (from hints and questions):
    - answerable_questions: Reference proven value cases
    - llm_hints.data_quirks: Explain data limitations
    - llm_hints.preferred_aggregations: Suggest further analysis
    
    üîç QUALITY AWARENESS:
    - sample_values: Validate result reasonableness
    - data_quirks: Caveat insights appropriately
    - foreign key relationships: Suggest cross-analysis
    
    ENHANCED ANALYTICAL FRAMEWORK:
    1. Use business_purpose to frame executive summary
    2. Apply semantic_type logic for metric interpretation
    3. Reference answerable_questions for proven value
    4. Incorporate data_quirks as analytical caveats
    5. Suggest next analyses from column_groups
    6. Tailor language to data_owner domain
  
  expected_output: |
    Strategic intelligence leveraging complete metadata context:
    {
      "direct_answer": "Based on the marketing funnel data, referral channels show 40% conversion rate, significantly outperforming Web (15%) and Phone (25%) channels.",
      
      "metadata_enhanced_insights": {
        "business_context_applied": "Per the business_purpose of 'optimizing marketing ROI', referral channel investment should be prioritized",
        "semantic_interpretation": "As acquisition_channel metrics, these represent top-of-funnel performance indicators",
        "stakeholder_relevance": "For the Marketing & Sales Team (data_owner), this validates referral program investments",
        "data_quality_context": "Data from Lead Management System with known summer seasonality (+30% volume)"
      },
      
      "strategic_analysis": {
        "business_impact": "Shifting 20% of Web budget to Referral programs could yield 2.67x conversion improvement",
        "confidence_level": "HIGH - based on Internal classification data with clear sample patterns",
        "data_considerations": [
          "Converted_date is NULL for Lost/Pending leads (from data_quirks)",
          "Peak summer volumes may skew channel performance (30% higher)"
        ],
        "proven_value_reference": "Similar to 'What is the conversion rate by channel?' analysis pattern",
        "strategic_recommendations": [
          "Increase referral incentives given 40% conversion rate",
          "Analyze Phone channel for quality improvements (25% rate)",
          "Investigate Web channel friction points (15% rate)",
          "Cross-analyze with locations data (via location_id foreign key) for regional insights"
        ]
      },
      
      "next_analysis_suggestions": {
        "from_column_groups": [
          "Analyze 'financial' group: average quote_amount by channel",
          "Examine 'conversion_tracking' group: lost_reason distribution"
        ],
        "from_answerable_questions": [
          "What are the top reasons for lost leads?",
          "What is the average quote amount by customer type?"
        ],
        "from_relationships": [
          "Join with locations to find highest-converting regions",
          "Connect to jobs table for post-conversion analysis"
        ]
      },
      
      "metadata_attribution": {
        "insights_derived_from": {
          "dataset_tags": ["Lead Management", "Marketing Analytics", "ROI Analysis"],
          "semantic_types_used": ["acquisition_channel", "status_code"],
          "llm_hints_applied": ["Conversion rates vary by channel pattern"],
          "column_groups_analyzed": ["lead_details", "conversion_tracking"]
        }
      }
    }
